module counter (
    btn0: input logic,
    btn1: input logic,

    rst: input reset,

    led0: output logic,
    led1: output logic,
    led2: output logic,
    led3: output logic,
) {
    var clk: clock;

    // It's not entirely clear how to constrain
    // the clock to the output frequency.
    // In any case, the SV snippet here instantiates
    // the internal oscillator primitive at 2.4 MHz.
    inst osc: $sv::OSC_TOP (
        clk: clk,
    );

    var cntr      : logic<4>;
    var is_pressed: logic   ;
    always_ff (clk, rst) {
        if_reset {
            cntr       = 0 as 4;
            is_pressed = 0 as 1;
        } else {
            if btn0 && !is_pressed {
                cntr       = cntr + 1 as 4;
                is_pressed = 1;
            } else if btn1 && !is_pressed {
                cntr       = cntr - 1 as 4;
                is_pressed = 1;
            } else if !btn0 && !btn1 {
                is_pressed = 0;
            }
        }
    }
    assign led0 = cntr[0];
    assign led1 = cntr[1];
    assign led2 = cntr[2];
    assign led3 = cntr[3];
}
